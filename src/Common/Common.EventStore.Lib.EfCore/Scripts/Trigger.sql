CREATE TABLE "Events" (
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "Timestamp" timestamp NOT NULL,
    "AggregateId" uuid NOT NULL,
    "Version" integer NOT NULL,
    "EventType" text NOT NULL,
    "Metadata" bytea NOT NULL,
    "Payload" bytea NOT NULL,
    CONSTRAINT "PK_Events" PRIMARY KEY ("Id")
);

CREATE INDEX "IX_Events_AggregateId" ON "Events" ("AggregateId");

CREATE INDEX "IX_Events_EventType" ON "Events" ("EventType");

CREATE INDEX "IX_Events_Timestamp" ON "Events" ("Timestamp");

CREATE UNIQUE INDEX "IX_Events_AggregateId_Version" ON "Events" ("AggregateId", "Version");


CREATE OR REPLACE FUNCTION notify_new_event()
RETURNS trigger AS $$
BEGIN
  PERFORM pg_notify(
    'new_event',
    row_to_json(NEW)::text
  );

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER new_event
AFTER INSERT
ON public."Events"
FOR EACH ROW
EXECUTE PROCEDURE notify_new_event()